/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package item_manager;
import java.util.*;
//import java.time.LocalDate;
import java.time.*;

/**
 *
 * @author Jeffr
 */
public class modifyitem extends javax.swing.JDialog {

    //instance vars
    private String Description;
    private int Quantity;
    private LocalDate ExpDate;
    private String Location;
    private ArrayList<Item> ItemInv;
    //use to check if the user wanted to modify the item
    private boolean PressedOK = false;
    
    private int itemIndex;
    /**
     * Creates new form modifyitem
     * @param parent
     * @param modal
     */
    public modifyitem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        mainform mf = new mainform();
        ItemInv = mf.getItemInventory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textBoxDescription = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboBoxDay = new javax.swing.JComboBox<>();
        comboBoxMonth = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboBoxYear = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        comboBoxLocation = new javax.swing.JComboBox<>();
        buttonApplyMod = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        spinnerQuantity = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modify Item");
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Item Description:");

        textBoxDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBoxDescriptionActionPerformed(evt);
            }
        });

        jLabel4.setText("Item Quantity:");

        jLabel5.setText("Expiration:");

        jLabel2.setText("day:");

        comboBoxDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        comboBoxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sept", "Oct", "Nov", "Dec" }));

        jLabel6.setText("month:");

        jLabel7.setText("year:");

        comboBoxYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099" }));

        jLabel3.setText("Location:");

        comboBoxLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fridge", "Freezer", "Pantry" }));

        buttonApplyMod.setText("apply modification");
        buttonApplyMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonApplyModActionPerformed(evt);
            }
        });

        buttonCancel.setText("cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(textBoxDescription))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel2))
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(16, 16, 16)
                                    .addComponent(jLabel6)
                                    .addGap(1, 1, 1)
                                    .addComponent(comboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel7))
                                .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboBoxLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonApplyMod))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCancel)
                        .addGap(0, 7, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textBoxDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spinnerQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(comboBoxDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboBoxLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonApplyMod)
                    .addComponent(buttonCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textBoxDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBoxDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textBoxDescriptionActionPerformed

    private void buttonApplyModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonApplyModActionPerformed
        // TODO add your handling code here:
        //set so it is know the user wanted to change the UI
        PressedOK = true;
        
        //set description , quantity
        Description = textBoxDescription.getText();
        Quantity = (int) spinnerQuantity.getValue();
      
        
       //get daya to create date object
       int year = (int) comboBoxYear.getSelectedIndex();
       int month = (int) comboBoxMonth.getSelectedIndex();
       int day = (int) comboBoxDay.getSelectedIndex();
       
       //create a LocalDate object
        this.ExpDate =  LocalDate.of(year+2019, month+1, day+1);
        
        //set location
        if(comboBoxLocation.getSelectedIndex() == 0)
        {
            Location = "Fridge"; 
        }
        if(comboBoxLocation.getSelectedIndex() == 1)
        {
            Location = "Freezer"; 
        }
        if(comboBoxLocation.getSelectedIndex() == 2)
        {
            Location = "Pantry"; 
        }
       //close the dialog window
        this.setVisible(false);
        
    }//GEN-LAST:event_buttonApplyModActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        // TODO add your handling code here:
        //set the bool so the main form knows it doesn't have to change anything
        PressedOK = false;
        
        this.setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        
        //create new mainform
        mainform mf = new mainform();        
        //check its loaded
        ItemInv = mf.getItemInventory();
        //get index of where we need to load
        itemIndex = mf.getItemIndex();
        
        
        //for all the items in the inventory
        for(int indexa = 0; indexa <= ItemInv.size(); indexa++)
        {
            if(indexa == itemIndex)//if item is what you are looking for
            {
               //set item to the index
                Item i = ItemInv.get(indexa);
               
                       //get description, quantity
                       Description = i.getDescription();
                       Quantity = (int) i.getQuantity();
                       //get date
                       ExpDate = i.getExpDate();
                       //get location
                       Location = i.getLocation();

            }
            else
            {
            //not the right item ,so continue loop  
            }

        }
        
        
        //set description, Quantity
        textBoxDescription.setText(Description);
        spinnerQuantity.setValue(Quantity);
        
        
        //set day
        int day = ExpDate.getDayOfMonth();
        comboBoxDay.setSelectedIndex(day -1);
        
        //set month
        int month = 0;
        //set month value to the UI
        if(ExpDate.getMonthValue() == 1)
        {
            month = 0;
        }
        if(ExpDate.getMonthValue() == 2)
        {
            month = 1;
        }
        if(ExpDate.getMonthValue() == 3)
        {
            month = 2;
        }
        if(ExpDate.getMonthValue() == 4)
        {
            month = 3;
        }
        if(ExpDate.getMonthValue() == 5)
        {
            month = 4;
        }
        if(ExpDate.getMonthValue() == 6)
        {
            month = 5;
        }
        if(ExpDate.getMonthValue() == 7)
        {
            month = 6;
        }
        if(ExpDate.getMonthValue() == 8)
        {
            month = 7;
        }
        if(ExpDate.getMonthValue() == 9)
        {
            month = 8;
        }
        if(ExpDate.getMonthValue() == 10)
        {
            month = 9;
        }
        if(ExpDate.getMonthValue() == 11)
        {
            month = 10;
        }
        if(ExpDate.getMonthValue() == 12)
        {
            month = 11;
        }
       
        //set the month to the UI Month combo box
        comboBoxMonth.setSelectedIndex(month);
        
        //set year
        int year= ExpDate.getYear();
        comboBoxYear.setSelectedIndex(year - 2019);
        
        
        //set location to the UI
        if(Location.equals("Fridge"))
        {
            comboBoxLocation.setSelectedIndex(0);
        }
        if(Location.equals("Freezer"))
        {
            comboBoxLocation.setSelectedIndex(1);
        }
        if(Location.equals("Pantry"))
        {
            comboBoxLocation.setSelectedIndex(2);
        }
        
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(modifyitem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(modifyitem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(modifyitem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(modifyitem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                modifyitem dialog = new modifyitem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
//get desc
    public String getDescription() {
        return Description;
    }
//get exp date
    public LocalDate getExpDate() {
        return ExpDate;
    }
// get location
    public String getLocat() {
        return Location;
    }
//get quantity
    public double getQuantity() {
        return Quantity;
    }
    //get item inv
    public ArrayList<Item> getItemInv() {
        return ItemInv;
    }
//get if the bool was changed to tell the mainform to change the data
    public boolean isPressedOK() {
        return PressedOK;
    }

    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonApplyMod;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JComboBox<String> comboBoxDay;
    private javax.swing.JComboBox<String> comboBoxLocation;
    private javax.swing.JComboBox<String> comboBoxMonth;
    private javax.swing.JComboBox<String> comboBoxYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSpinner spinnerQuantity;
    private javax.swing.JTextField textBoxDescription;
    // End of variables declaration//GEN-END:variables
}
